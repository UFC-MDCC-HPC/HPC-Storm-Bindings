<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000271564c9d5c4c0f2913fb2a35259b81a11df9719655277425c4d18936fe56694e13030c2c5e4a76d9c561634ae4fa797f97d8cf778ab89c4d8c59f1f7841bb1eeeb996122456b1f4ac406bd868e57413967da3532553bea80f06d35c31c6815ab348fdbb3de917117d4919d30f3c6dce5775a114cf11af4bca96f5184e1aacc3" isAbstract="true" kind="Synchronizer" name="TaskBindingBase" packagePath="br.ufc.mdcc.hpc.storm.binding.task">
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <parameter componentRef="task_port_type" formFieldId="task_port_type" order="0" variance="contravariant" varName="T"/>
    <innerComponent localRef="task_port_type" location="br.ufc.mdcc.hpc.storm.binding.task.TaskPortType/TaskPortType.hpe" multiple="false" name="TaskPortType" package="br.ufc.mdcc.hpc.storm.binding.task" parameter_id="task_port_type" exposed="false">
      <visualDescription h="94" w="179" x="101" y="400">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="true" uRef="task_port_type">
        <visualDescription h="20" w="20" x="83" y="14"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="channel" location="br.ufc.mdcc.hpc.storm.binding.channel.Binding/Binding.hpe" multiple="false" name="Binding" package="br.ufc.mdcc.hpc.storm.binding.channel" exposed="false">
      <visualDescription h="60" w="100" x="354" y="317">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="root">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
      <unitBounds parallel="true" uRef="peer">
        <visualDescription h="20" w="20" x="28" y="2"/>
      </unitBounds>
    </innerComponent>
    <interface iRef="ITaskPort" nArgs="1">
      <slice isRef="task_port_type">
        <originRef cRef="task_port_type" iRef="ITaskPortType"/>
        <visualDescription h="10" w="10" x="29" y="14"/>
      </slice>
      <slice isRef="channel">
        <originRef cRef="channel" iRef="IChannel"/>
        <visualDescription h="10" w="10" x="48" y="25"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* AUTOMATICALLY GENERATE CODE */&#xA;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskPortType;&#xA;&#xA;namespace br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase&#xA;{&#xA;&#x9;public interface BaseITaskPort&lt;T> : ISynchronizerKind &#xA;&#x9;&#x9;where T:ITaskPortType&#xA;&#x9;{&#xA;&#x9;}&#xA;}" name="BaseITaskPort.cs" srcType="base" uri="br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/bin/1.0.0.0/BaseITaskPort.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpc.storm.binding.task.TaskPortType/bin/1.0.0.0/ITaskPortType.dll</dependency>
        </file>
        <file contents="using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.task.TaskPortType;&#xA;using System.Threading;&#xA;using System;&#xA;&#xA;namespace br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase&#xA;{&#xA;&#x9;public interface ITaskPort&lt;T> : BaseITaskPort&lt;T>&#xA;&#x9;&#x9;where T:ITaskPortType&#xA;&#x9;{&#xA;&#x9;&#x9;// (1) invokes and waits for action completion.&#xA;&#x9;&#x9;void invoke(object action_id);&#xA;&#xA;&#x9;&#x9;// (2) invokes and returns a future object for further testing or waiting of action completion.&#xA;&#x9;&#x9;void invoke(object action_id, out IActionFuture future);&#xA;&#xA;&#x9;&#x9;// (3) As (2), but it only completes after executing a procedure.&#xA;&#x9;&#x9;Thread invoke(object action_id, Action reaction, out IActionFuture future);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;&#x9;public interface IActionFuture&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;void wait();&#xA;&#x9;&#x9;&#x9;bool test();&#xA;&#x9;&#x9;&#x9;IActionFutureSet createSet();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public interface IActionFutureSet &#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;void addAction(IActionFuture new_future);&#xA;&#xA;&#x9;&#x9;&#x9;void waitAll();&#xA;&#x9;&#x9;&#x9;IActionFuture waitAny();&#xA;&#xA;&#x9;&#x9;&#x9;bool testAll();&#xA;&#x9;&#x9;&#x9;IActionFuture testAny();&#xA;&#xA;&#x9;&#x9;&#x9;IActionFuture[] Completed { get; }&#xA;&#x9;&#x9;&#x9;IActionFuture[] Pending { get; }&#xA;&#x9;&#x9;}&#xA;}" name="ITaskPort.cs" srcType="user" uri="br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/bin/1.0.0.0/ITaskPort.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpc.storm.binding.task.TaskPortType/bin/1.0.0.0/ITaskPortType.dll</dependency>
          <dependency>%WORKSPACE/br.ufc.mdcc.hpc.storm.binding.task.TaskBindingBase/bin/1.0.0.0/BaseITaskPort.dll</dependency>
        </file>
      </sources>
      <visualDescription h="66" w="197" x="260" y="66">
        <color b="255" g="0" r="0"/>
      </visualDescription>
      <parameter iname="ITaskPortType" order="0" parid="task_port_type" uname="task_port_type" varid="T"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="-1" iRef="ITaskPort" multiple="true" private="false" replica="0" uRef="peer" visibleInterface="true">
      <slices cRef="task_port_type" inner_replica="0" slice_replica="0" uRef="task_port_type" sliceName="task_port_type" transitive="false">
        <visualDescription h="10" w="10" x="17" y="13"/>
      </slices>
      <slices cRef="channel" inner_replica="0" slice_replica="0" uRef="peer" sliceName="channel" transitive="false">
        <visualDescription h="10" w="10" x="48" y="25"/>
      </slices>
      <visualDescription h="40" w="80" x="160" y="216"/>
    </unit>
  </componentInfo>
</component:component>